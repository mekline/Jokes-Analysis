plotData$ROIName <- factor(plotData$ROIName, levels = plotData$ROIName)
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = plotData$ROIGroup)
plotData$contrastName <- factor(plotData$contrastName, levels = plotData$contrastName)
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
#geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh)) +
scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5)) +
guide_legend(fill=guide_legend(title=""))
#xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = plotData$ROIName)
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = plotData$ROIGroup)
plotData$contrastName <- factor(plotData$contrastName, levels = plotData$contrastName)
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity")
#geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
#coord_cartesian(ylim=c(ylow,yhigh)) +
#scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5)) +
#guide_legend(fill=guide_legend(title=""))
#xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity")
#geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
#coord_cartesian(ylim=c(ylow,yhigh)) +
#scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5)) +
#guide_legend(fill=guide_legend(title=""))
#xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity")
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9))
#coord_cartesian(ylim=c(ylow,yhigh)) +
#scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5)) +
#guide_legend(fill=guide_legend(title=""))
#xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9))
#coord_cartesian(ylim=c(ylow,yhigh)) +
#scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5)) +
#guide_legend(fill=guide_legend(title=""))
#xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh)) +
scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5))
#guide_legend(fill=guide_legend(title=""))
#xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh)) +
scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5)) +
guide_legend(fill=guide_legend(title="")) +
xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh))
#scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5)) +
#guide_legend(fill=guide_legend(title="")) +
#xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh))
#scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5)) +
#guide_legend(fill=guide_legend(title="")) +
#xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh))
scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5))
#guide_legend(fill=guide_legend(title="")) +
#xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh)) +
scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5))+
#guide_legend(fill=guide_legend(title="")) +
xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh)) +
scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5))+
guide_legend(fill=guide_legend(title="")) +
xlab('')
#ylab('% signal change over fixation')+
#scale_fill_manual(name="", values=mycolors)+
#theme_bw()+
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh)) +
scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5))+
#guide_legend(fill=guide_legend(title="")) +
xlab('') +
ylab('% signal change over fixation') +
scale_fill_manual(name="", values=mycolors) +
theme_bw()
#theme(legend.key = element_blank())+
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh)) +
scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5))+
xlab('') +
ylab('% signal change over fixation') +
scale_fill_manual(name="", values=mycolors) +
theme_bw() +
theme(legend.key = element_blank())
#facet_grid(~ROIGroup, scale='free_x', space='free_x')+
#theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh)) +
scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5))+
xlab('') +
ylab('% signal change over fixation') +
scale_fill_manual(name="", values=mycolors) +
theme_bw() +
theme(legend.key = element_blank()) +
facet_grid(~ROIGroup, scale='free_x', space='free_x') +
theme(strip.background = element_blank())
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar(LHLang)
makeBar(RHLang)
makeBar(MDLeft)
makeBar(MDRight)
makeBar(ToM, -0.5, 1)
makeBar(ToMCustom, -0.5, 1, c(high="gray35", med="gray50", low="gray65"))
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh)) +
scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5))+
xlab('') +
ylab('% signal change over fixation') +
scale_fill_manual(name="", values=mycolors) +
theme_bw() +
theme(legend.key = element_blank()) +
facet_grid(~ROIGroup, scale='free_x', space='free_x') +
theme(strip.background = element_blank()) +
# Optional, remove for RHLang and ToMCustom since we want the legend there...
theme(legend.position="none")
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar(RHLang)
makeBar(MDLeft)
makeBar(MDRight)
makeBar(ToM, -0.5, 1)
makeBar(ToMCustom, -0.5, 1, c(high="gray35", med="gray50", low="gray65"))
#This file reads in ALL the %-signal-change values, per-participant, per-parcel, per-contrast,
# Those %-signal-change calculations are produced by the awesome toolbox analyses, and represent a single overall calculation
#derived for the whole parcel region (not individual voxels, as mk sometimes forgets)
library(dplyr)
library(tidyr)
library(ggplot2)
rm(list = ls())
########
#READ IN DATA
########
#Here, we read in all those files, calculate a whole passle of mean and standard error bars, and then make graphs
# Add in the contrast and ROI names so it's not just numbers!!!!!
LangROI.Names = c('LPostTemp', 'LAntTemp', 'LAngG', 'LIFG',      'LMFG',     'LIFGorb');
RHLangROI.Names = c('RPostTemp', 'RAntTemp', 'RAngG', 'RIFG',      'RMFG',     'RIFGorb');
MDROI.Names = c('LIFGop',  'RIFGop', 'LMFG',    'RMFG',    'LMFGorb',
'RMFGorb', 'LPrecG', 'RPrecG',  'LInsula', 'RInsula',
'LSMA',    'RSMA',   'LParInf', 'RParInf', 'LParSup',
'RParSup', 'LACC',   'RACC');
ToMROI.Names = c('DMPFC', 'LTPJ',  'MMPFC', 'PC',
'RTPJ',  'VMPFC', 'RSTS');
normal.contrasts = c('joke', 'lit', 'joke-lit')
custom.contrasts = c('low','med','high','other')
myResults = read.csv('contrast files/LangfROIsrespNonlitJokes.csv') %>%
mutate(ROIName = LangROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast])%>%
mutate(Group = 'LHLang')
allSigChange = myResults
myResults = read.csv('contrast files/RHLangfROIsrespNonlitJokes.csv')%>%
mutate(ROIName = RHLangROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast])%>%
mutate(Group = 'RHLang')
allSigChange = rbind(allSigChange, myResults)
myResults = read.csv('contrast files/MDfROIsrespNonlitJokes.csv') %>%
mutate(ROIName = MDROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'MDAll')
allSigChange = rbind(allSigChange, myResults)
#Little extra thing here, rename MD to split by L and R hemisphere!
allSigChange[(allSigChange$Group == 'MDAll') & (allSigChange$ROI %%2 == 1),]$Group = 'MDLeft'
allSigChange[(allSigChange$Group == 'MDAll') & (allSigChange$ROI %%2 == 0),]$Group = 'MDRight'
myResults = read.csv('contrast files/NewToMfROIsrespNonlitJokes.csv')%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM')
allSigChange = rbind(allSigChange, myResults)
myResults = read.csv('contrast files/NewToMfROIsresCustomJokes.csv')%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = custom.contrasts[Contrast])%>%
mutate(Group = 'ToMCustom')
allSigChange = rbind(allSigChange, myResults)
#########
# TRANSFORMATIONS
#########
#First, in addition to the by-region signal changes, we are going to give each person an average signal change value for each localizer group
avgSigChange = aggregate(allSigChange$sigChange, by=list(allSigChange$Group,allSigChange$SubjectNumber,allSigChange$contrastName), mean)
names(avgSigChange) = c('Group','SubjectNumber', 'contrastName','sigChange')
avgSigChange$ROIName = 'LocalizerAverage'
avgSigChange$ROI = 0
allSigChange <- allSigChange %>%
select(one_of('Group','ROIName', 'ROI','SubjectNumber', 'contrastName','sigChange'))
allSigChange <- rbind(allSigChange, avgSigChange)
#Drop the contrasts we're not interested in...
toGraph = allSigChange %>%
filter(contrastName %in% c('joke','lit','high','med','low'))
#Next, get the table that we'll be making the graphs from: for each region (including the average region), take all
#the individual signal changes and calculate a mean and a standard error
sterr <- function(mylist){
my_se = sd(mylist)/sqrt(length(mylist))
return(my_se)
}
mystats = aggregate(toGraph$sigChange, by=list(toGraph$Group, toGraph$ROIName, toGraph$ROI,toGraph$contrastName), mean)
names(mystats) = c('Group','ROIName', 'ROI','contrastName', 'themean')
myster = aggregate(toGraph$sigChange, by=list(toGraph$Group, toGraph$ROIName, toGraph$ROI,toGraph$contrastName), sterr)
names(myster) = c('Group','ROIName', 'ROI','contrastName', 'sterr')
mystats = merge(mystats,myster)
mystats$se_up = mystats$themean + mystats$sterr
mystats$se_down = mystats$themean - mystats$sterr
#########
# Graphs!
#########
#Now we can use the information stored in mystats to make pretty graphs! This could be done in excel too
#Select the rows we want for each graph, and order them how we want! For now, localizerAverage will just come first in all sets
mystats$contNo <- 1
mystats[mystats$contrastName == 'joke',]$contNo <- 1
mystats[mystats$contrastName == 'lit',]$contNo <- 2
mystats[mystats$contrastName == 'high',]$contNo <- 1
mystats[mystats$contrastName == 'med',]$contNo <- 2
mystats[mystats$contrastName == 'low',]$contNo <- 3
mystats = arrange(mystats, ROI)
mystats = arrange(mystats, contNo)
#Add a new col to separate out the localizer average
mystats$ROIGroup <- "Individual fROIs"
mystats[mystats$ROIName == "LocalizerAverage",]$ROIGroup <- "Localizer\n average"
mystats = arrange(mystats, desc(ROIGroup))
#Changes for prettiness
#mystats[mystats$ROIName=="LocalizerAverage",]$ROIName <- mystats[mystats$ROIName=="LocalizerAverage",]$Group
mystats[mystats$ROIName=="LocalizerAverage",]$ROIName <- ""
#Subsets!
LHLang = filter(mystats, Group == 'LHLang')
LHLang = LHLang[c(1,2,11,12,9,10,13,14,5,6,7,8,3,4),]
RHLang = filter(mystats, Group == 'RHLang')
RHLang = RHLang[c(1,2,11,12,9,10,13,14,5,6,7,8,3,4),]
ToM = filter(mystats, Group == 'ToM')
MDLeft = filter(mystats, Group == 'MDLeft')
MDRight = filter(mystats, Group == 'MDRight')
ToMCustom = filter(mystats, Group == 'ToMCustom')
#Graphing function!
makeBar = function(plotData,ylow=-0.5,yhigh=2.5, mycolors = c(joke="gray35", lit="gray60")) {
#freeze factor orders
plotData$ROIName <- factor(plotData$ROIName, levels = unique(plotData$ROIName))
plotData$ROIGroup <- factor(plotData$ROIGroup, levels = unique(plotData$ROIGroup))
plotData$contrastName <- factor(plotData$contrastName, levels = unique(plotData$contrastName))
myfi = paste('figs/', plotData$Group[1], '.jpg', sep="")#filename
print(myfi)
ggplot(data=plotData, aes(x=ROIName, y=themean, fill=contrastName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=se_down, ymax=se_up), colour="black", width=.1, position=position_dodge(.9)) +
coord_cartesian(ylim=c(ylow,yhigh)) +
scale_y_continuous(breaks = seq(-0.5, 2.5, 0.5))+
xlab('') +
ylab('% signal change over fixation') +
scale_fill_manual(name="", values=mycolors) +
theme_bw() +
theme(legend.key = element_blank()) +
facet_grid(~ROIGroup, scale='free_x', space='free_x') +
theme(strip.background = element_blank()) +
# Optional, remove for RHLang and ToMCustom since we want the legend there...
theme(legend.position="none")
ggsave(filename=myfi, width=length(unique(plotData$ROIName)), height=3)
}
makeBar(LHLang)
makeBar(RHLang)
makeBar(MDLeft)
makeBar(MDRight)
makeBar(ToM, -0.5, 1)
makeBar(ToMCustom, -0.5, 1, c(high="gray35", med="gray50", low="gray65"))
