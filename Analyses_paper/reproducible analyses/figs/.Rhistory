unique(allSigChange$contrastName)
ToMCustom <- <- filter(allSigChange, Group == "ToMCustom", contrastName == 'low' | contrastName == 'med' | contrastName == 'high')
#Make sure those factors are ordered....
type(ToMCustom$contrastName)
ToMCustom$contrastName
ToMCustom <- filter(allSigChange, Group == "ToMCustom", contrastName == 'low' | contrastName == 'med' | contrastName == 'high')
ToMCustom$contrastName
is.ordered(ToMCustom$contrastName)
head(ToMCustom)
is.ordered(ToMCustom$Contrast)
help(as.factor)
ToMCustom$contrastName <- as.factor(ToMCustom$contrastName, as.ordered = TRUE)
is.ordered(ToMCustom$contrastName)
ToMCustom$contrastName <- as.factor(ToMCustom$contrastName)
head(ToMCustom)
is.factor(ToMCustom$contrastName)
m1 <- lmer(sigChange ~ contrastName + (contrastName|ROIName) + (contrastName|SubjectNumber), data = ToMCustom)
m0 <- lmer(sigChange ~ 1 + (contrastName|ROIName) + (contrastName|SubjectNumber), data = ToMCustom)
anova(m1,m0)
ToM_RHLang_cont <- filter(allSigChange, Group == "ToM" | Group == "RHLang", contrastName == 'joke-lit')
m1 <- lmer(sigChange ~ Group + (1|ROIName) + (Group|SubjectNumber), data = ToM_RHLang_cont)
m0 <- lmer(sigChange ~ 1 + (1|ROIName) + (Group|SubjectNumber), data = ToM_RHLang_cont)
anova(m1,m0)
ToM_MDLeft_cont <- filter(allSigChange, Group == "ToM" | Group == "MDLeft", contrastName == 'joke-lit')
m1 <- lmer(sigChange ~ Group + (1|ROIName) + (Group|SubjectNumber), data = ToM_MDLeft_cont)
m0 <- lmer(sigChange ~ 1 + (1|ROIName) + (Group|SubjectNumber), data = ToM_MDLeft_cont)
anova(m1,m0)
ToM_LHLang_cont <- filter(allSigChange, Group == "ToM" | Group == "LHLang", contrastName == 'joke-lit')
m1 <- lmer(sigChange ~ Group + (1|ROIName) + (Group|SubjectNumber), data = ToM_LHLang_cont)
m0 <- lmer(sigChange ~ 1 + (1|ROIName) + (Group|SubjectNumber), data = ToM_LHLang_cont)
anova(m1,m0)
LHLang <- filter(allSigChange, Group == "LHLang", contrastName == 'joke' | contrastName == 'lit')
m1 <- lmer(sigChange ~ contrastName + (contrastName|ROIName) + (contrastName|SubjectNumber), data = LHLang)
m0 <- lmer(sigChange ~ 1 + (contrastName|ROIName) + (contrastName|SubjectNumber), data = LHLang)
anova(m1,m0)
#Relating behavioral and contrast data by subjects!
rm(list=ls(all=TRUE))
library(tidyr)
library(dplyr)
library(lme4)
library(ggplot2)
#(set your own wd first)
setwd("~/Dropbox/_Projects/Jokes - fMRI/Jokes-Analysis Repository/Analyses_paper/reproducible analyses")
mywd <- getwd()
setwd("indsubjs_behavioral_data")
myfi <- list.files(pattern='*data\\.csv')
mydata <- data.frame(NULL)
for(f in myfi) {
tmp <- read.csv(f, header=T)
tmp$filename <- f
mydata <- rbind(mydata, tmp)
}
#Subjs 6 onward have oddly formatted TR info at the top of files, remove it
mydata <- mydata[grep("KAN",mydata$subj),]
#Drop nonresponding trials
mydata$RT <- as.numeric(as.character(mydata$RT))
mydata <- mydata[!is.na(mydata$RT),]
####
# RT
####
#Get average RTs per category per participant
avgRT <- mydata %>%
group_by(subj, category) %>%
summarise(meanRT = mean(RT))
#T test
t.test(meanRT ~ category, data=avgRT)
#Response times are not different by condition
####
# Ratings
####
#Get average ratings per category per participant
mydata$response <- as.numeric(as.character(mydata$response))
avgResponse <- mydata %>%
group_by(subj, category) %>%
summarise(meanResponse = mean(response))
t.test(meanResponse ~ category, data=avgResponse)
#Responses are different by condition! The jokes are funny!
View(mydata)
####
# Now go to the contrast files and get the jokes-lit average activation per subj.
setwd("~/Dropbox/_Projects/Jokes - fMRI/Jokes-Analysis Repository/Analyses_paper/contrasts")
ToMROI.Names = c('DMPFC', 'LTPJ',  'MMPFC', 'PC',
'RTPJ',  'VMPFC', 'RSTS');
normal.contrasts = c('joke', 'lit', 'joke-lit')
myResults = read.csv('NewToMfROIsrespNonlitJokes.csv')%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM')
View(myResults)
names(myResults)
myResults = read.csv('NewToMfROIsrespNonlitJokes.csv')%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM') %>%
filter(contrastName == 'joke-lit') %>%
group_by(SubjectNumber)%>%
summarize(mean(sigChange))
myResults
myfMRIResults = read.csv('NewToMfROIsrespNonlitJokes.csv')%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM') %>%
filter(contrastName == 'joke-lit') %>%
group_by(SubjectNumber)%>%
summarize(mean(sigChange))
unique(mydata$subj)
#Relating behavioral and contrast data by subjects!
rm(list=ls(all=TRUE))
library(tidyr)
library(dplyr)
library(lme4)
library(ggplot2)
#(set your own wd first)
setwd("~/Dropbox/_Projects/Jokes - fMRI/Jokes-Analysis Repository/Analyses_paper/reproducible analyses")
mywd <- getwd()
setwd("indsubjs_behavioral_data")
myfi <- list.files(pattern='*data\\.csv')
mydata <- data.frame(NULL)
for(f in myfi) {
tmp <- read.csv(f, header=T)
tmp$filename <- f
mydata <- rbind(mydata, tmp)
}
#Subjs 6 onward have oddly formatted TR info at the top of files, remove it
mydata <- mydata[grep("KAN",mydata$subj),]
unique(mydata$subj)
myfi
myfi <- list.files(pattern='*data\\.csv')
mydata <- data.frame(NULL)
for(f in myfi) {
tmp <- read.csv(f, header=T)
tmp$filename <- f
mydata <- rbind(mydata, tmp)
}
unique(mydata$subj)
mydata <- data.frame(NULL)
for(f in myfi) {
tmp <- read.csv(f, header=T)
tmp$filename <- f
mydata <- rbind(mydata, tmp)
print(f)
}
for(f in myfi) {
tmp <- read.csv(f, header=T)
tmp$filename <- f
print(nrow(tmp))
mydata <- rbind(mydata, tmp)
}
nrow(myfi)
length(myfi)
mydata <- data.frame(NULL)
for(f in myfi) {
tmp <- read.csv(f, header=T)
tmp$filename <- f
mydata <- rbind(mydata, tmp)
}
View(mydata)
names(mydata)
mydata$filename
substr(mydata$filename[1],12)
substr(mydata$filename[1],1,12)
substr(mydata$filename[1],1,13)
substr(mydata$filename[1],1,15)
#Relable subject data from filenames!
mydata <- mydata %>%
mutate(newSubjectName = substr(filename,1,15))
mydata$newSubjectName
#Analyzing the behavioral results from the jokes paper!
rm(list=ls(all=TRUE))
library(tidyr)
library(dplyr)
library(lme4)
library(ggplot2)
#(set your own wd first)
setwd("~/Dropbox/_Projects/Jokes - fMRI/Jokes-Analysis Repository/Analyses_paper/reproducible analyses")
mywd <- getwd()
setwd("indsubjs_behavioral_data")
myfi <- list.files(pattern='*data\\.csv')
mydata <- data.frame(NULL)
for(f in myfi) {
tmp <- read.csv(f, header=T)
tmp$filename <- f
mydata <- rbind(mydata, tmp)
}
#Subjs 6 onward have oddly formatted TR info at the top of files, remove it
mydata <- mydata[grep("KAN",mydata$subj),]
#Drop nonresponding trials
mydata$RT <- as.numeric(as.character(mydata$RT))
mydata <- mydata[!is.na(mydata$RT),]
#Relable subject data from filenames!
mydata <- mydata %>%
mutate(newSubjectName = substr(filename,1,15))
####
# RT
####
#Get average RTs per category per participant
avgRT <- mydata %>%
group_by(newSubjectName, category) %>%
summarise(meanRT = mean(RT))
#T test
t.test(meanRT ~ category, data=avgRT)
#Response times are not different by condition
####
# Ratings
####
#Get average ratings per category per participant
mydata$response <- as.numeric(as.character(mydata$response))
avgResponse <- mydata %>%
group_by(newSubjectName, category) %>%
summarise(meanResponse = mean(response))
t.test(meanResponse ~ category, data=avgResponse)
#Responses are different by condition! The jokes are funny!
#Relating behavioral and contrast data by subjects!
rm(list=ls(all=TRUE))
library(tidyr)
library(dplyr)
library(lme4)
library(ggplot2)
#(set your own wd first)
setwd("~/Dropbox/_Projects/Jokes - fMRI/Jokes-Analysis Repository/Analyses_paper/reproducible analyses")
mywd <- getwd()
setwd("indsubjs_behavioral_data")
myfi <- list.files(pattern='*data\\.csv')
mydata <- data.frame(NULL)
for(f in myfi) {
tmp <- read.csv(f, header=T)
tmp$filename <- f
mydata <- rbind(mydata, tmp)
}
#Subjs 6 onward have oddly formatted TR info at the top of files, remove it
mydata <- mydata[grep("KAN",mydata$subj),]
#Drop nonresponding trials
mydata$RT <- as.numeric(as.character(mydata$RT))
mydata <- mydata[!is.na(mydata$RT),]
#Relable subject data from filenames!
mydata <- mydata %>%
mutate(newSubjectName = substr(filename,1,15))
####
# RT
####
#Get average RTs per category per participant
avgRT <- mydata %>%
group_by(newSubjectName, category) %>%
summarise(meanRT = mean(RT))
#T test
t.test(meanRT ~ category, data=avgRT)
#Response times are not different by condition
####
# Ratings
####
#Get average ratings per category per participant
mydata$response <- as.numeric(as.character(mydata$response))
avgResponse <- mydata %>%
group_by(newSubjectName, category) %>%
summarise(meanResponse = mean(response))
t.test(meanResponse ~ category, data=avgResponse)
#Responses are different by condition! The jokes are funny!
as.numeric(mydata$newSubjectName)
as.numeric(as.factor(mydata$newSubjectName))
####
# Now go to the contrast files and get the jokes-lit average activation per subj.
setwd("~/Dropbox/_Projects/Jokes - fMRI/Jokes-Analysis Repository/Analyses_paper/contrasts")
ToMROI.Names = c('DMPFC', 'LTPJ',  'MMPFC', 'PC',
'RTPJ',  'VMPFC', 'RSTS');
normal.contrasts = c('joke', 'lit', 'joke-lit')
myfMRIResults = read.csv('NewToMfROIsrespNonlitJokes.csv')%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM') %>%
filter(contrastName == 'joke-lit') %>%
group_by(SubjectNumber)%>%
summarize(mean(sigChange))
View(mydata)
myRatingResults <- mydata %>%
group_by(newSubjectName, category) %>%
summarise(meanResponse = mean(response))
myRatingResults
myRatingResults <- mydata %>%
mutate(SubjectNumber = as.numeric(as.factor(newSubjectNumber)))
group_by(newSubjectNumber, category) %>%
summarise(meanResponse = mean(response))
#Relating behavioral and contrast data by subjects!
rm(list=ls(all=TRUE))
library(tidyr)
library(dplyr)
library(lme4)
library(ggplot2)
#(set your own wd first)
setwd("~/Dropbox/_Projects/Jokes - fMRI/Jokes-Analysis Repository/Analyses_paper/reproducible analyses")
mywd <- getwd()
setwd("indsubjs_behavioral_data")
myfi <- list.files(pattern='*data\\.csv')
mydata <- data.frame(NULL)
for(f in myfi) {
tmp <- read.csv(f, header=T)
tmp$filename <- f
mydata <- rbind(mydata, tmp)
}
#Subjs 6 onward have oddly formatted TR info at the top of files, remove it
mydata <- mydata[grep("KAN",mydata$subj),]
#Drop nonresponding trials
mydata$RT <- as.numeric(as.character(mydata$RT))
mydata <- mydata[!is.na(mydata$RT),]
#Relable subject data from filenames!
mydata <- mydata %>%
mutate(newSubjectName = substr(filename,1,15))
####
# RT
####
#Get average RTs per category per participant
avgRT <- mydata %>%
group_by(newSubjectName, category) %>%
summarise(meanRT = mean(RT))
#T test
t.test(meanRT ~ category, data=avgRT)
#Response times are not different by condition
####
# Ratings
####
#Get average ratings per category per participant
mydata$response <- as.numeric(as.character(mydata$response))
avgResponse <- mydata %>%
group_by(newSubjectName, category) %>%
summarise(meanResponse = mean(response))
t.test(meanResponse ~ category, data=avgResponse)
#Responses are different by condition! The jokes are funny!
####
# Now go to the contrast files and get the jokes-lit average activation per subj.
setwd("~/Dropbox/_Projects/Jokes - fMRI/Jokes-Analysis Repository/Analyses_paper/contrasts")
ToMROI.Names = c('DMPFC', 'LTPJ',  'MMPFC', 'PC',
'RTPJ',  'VMPFC', 'RSTS');
normal.contrasts = c('joke', 'lit', 'joke-lit')
myfMRIResults = read.csv('NewToMfROIsrespNonlitJokes.csv')%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM') %>%
filter(contrastName == 'joke-lit') %>%
group_by(SubjectNumber)%>%
summarize(mean(sigChange))
myRatingResults <- mydata %>%
mutate(SubjectNumber = as.numeric(as.factor(newSubjectNumber)))
group_by(newSubjectNumber, category) %>%
summarise(meanResponse = mean(response))
myRatingResults <- mydata %>%
mutate(SubjectNumber = as.numeric(as.factor(newSubjectNumber)))
group_by(SubjectNumber, category) %>%
summarise(meanResponse = mean(response))
myRatingResults <- mydata %>%
mutate(SubjectNumber = as.numeric(as.factor(newSubjectName)))
group_by(SubjectNumber, category) %>%
summarise(meanResponse = mean(response))
myfMRIResults = read.csv('NewToMfROIsrespNonlitJokes.csv')%>%
mutate(ROIName = ToMROI.Names[ROI]) %>%
mutate(contrastName = normal.contrasts[Contrast]) %>%
mutate(Group = 'ToM') %>%
filter(contrastName == 'joke-lit') %>%
group_by(SubjectNumber)%>%
summarize(meanSigChange = mean(sigChange))
myRatingResults <- mydata %>%
mutate(SubjectNumber = as.numeric(as.factor(newSubjectName))) %>%
group_by(SubjectNumber, newSubjectName, category) %>%
summarise(meanResponse = mean(response))
View(myfMRIResults)
View(myRatingResults)
myRatingResults <- mydata %>%
mutate(SubjectNumber = as.numeric(as.factor(newSubjectName))) %>%
group_by(SubjectNumber, newSubjectName, category) %>%
summarise(meanResponse = mean(response)) %>%
spread(category)
help(spread)
myRatingResults <- mydata %>%
mutate(SubjectNumber = as.numeric(as.factor(newSubjectName))) %>%
group_by(SubjectNumber, newSubjectName, category) %>%
summarise(meanResponse = mean(response)) %>%
spread(category, meanResponse)
View(myRatingResults)
myRatingResults <- mydata %>%
mutate(SubjectNumber = as.numeric(as.factor(newSubjectName))) %>%
group_by(SubjectNumber, newSubjectName, category) %>%
summarise(meanResponse = mean(response)) %>%
spread(category, meanResponse) %>%
mutate(meanResponseChange = joke-lit)
myRatingResults <- mydata %>%
mutate(SubjectNumber = as.numeric(as.factor(newSubjectName))) %>%
group_by(SubjectNumber, newSubjectName, category) %>%
summarise(meanResponse = mean(response)) %>%
spread(category, meanResponse) %>%
mutate(meanResponseChange = joke-nonjoke)
View(myRatingResults)
bb <- merge(myRatingResults, myfMRIResults)
View(bb)
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point()
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
xlab('average response (joke - lit)') +
ylab('average activation (joke - lit') +
theme_bw()
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
xlab('average response (joke - lit)') +
ylab('average activation (joke - lit)') +
theme_bw()
help(rcorr)
help(cor)
cor(bb$meanResponseChange, bb$meanSigChange)
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
xlab('average response (joke - lit)') +
ylab('average activation (joke - lit)') +
theme_bw()
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_abline() +
xlab('average response (joke - lit)') +
ylab('average activation (joke - lit)') +
theme_bw()
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_abline(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
xlab('average response (joke - lit)')
help(geom_abline)
coef(lm(mpg ~ wt, data = mtcars))
coef(lm(meanResponseChange ~ meanSigChange, data = bb))
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
xlab('average response (joke - lit)') +
ylab('average activation (joke - lit)') +
theme_bw() +
ggsave(filename="behav_activation.jpg", width=3, height=3)
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_y_continuous(breaks = seq(-0.25, 0.5, 0.25)) +
xlab('average response (joke - lit)')
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_y_continuous(breaks = seq(-0.25, 0.5, 0.25)) +
xlab('average response (joke - lit)') +
ylab('average activation (joke - lit)') +
theme_bw()
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_y_continuous(breaks = seq(-0.25, 0.5, 0.25)) +
scale_x_continuous(breaks = seq(0, 2, 0.5))
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_y_continuous(breaks = seq(-0.25, 0.5, 0.25))
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_y_continuous(breaks = seq(-0.5, 0.75, 0.25))
help(scale_y_continuous)
seq(-0.5, 0.75, 0.25)
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_y_continuous(limits = c(-0.50, 0.75), breaks = seq(-0.5, 0.75, 0.25)) +
s
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_y_continuous(limits = c(-0.50, 0.75), breaks = seq(-0.5, 0.75, 0.25)) +
#scale_x_continuous(breaks = seq(0, 2, 0.5)) +
xlab('average response (joke - lit)')
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_y_continuous(limits = c(-0.50, 0.75), breaks = seq(-0.5, 0.75, 0.25)) +
scale_x_continuous(limits = c(0, 2), breaks = seq(0, 2, 0.5)) +
xlab('average response (joke - lit)') +
ylab('average activation (joke - lit)') +
theme_bw()
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_y_continuous(limits = c(-0.25, 0.75), breaks = seq(-0.25, 0.75, 0.25)) +
scale_x_continuous(limits = c(0, 2), breaks = seq(0, 2, 0.5)) +
xlab('average response (joke - lit)') +
ylab('average activation (joke - lit)') +
theme_bw()
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_y_continuous(limits = c(-0.25, 0.50), breaks = seq(-0.25, 0.50, 0.25)) +
scale_x_continuous(limits = c(0, 2), breaks = seq(0, 2, 0.5)) +
xlab('average response (joke - lit)') +
ylab('average activation (joke - lit)') +
theme_bw()
setwd("~/Dropbox/_Projects/Jokes - fMRI/Jokes-Analysis Repository/Analyses_paper/reproducible analyses")
## MAKE PRETTY GRAPH
setwd("~/Dropbox/_Projects/Jokes - fMRI/Jokes-Analysis Repository/Analyses_paper/reproducible analyses/figs")
coef(lm(meanResponseChange ~ meanSigChange, data = bb))
ggplot(data=bb, aes(y=meanSigChange, x=meanResponseChange)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_y_continuous(limits = c(-0.25, 0.50), breaks = seq(-0.25, 0.50, 0.25)) +
scale_x_continuous(limits = c(0, 2), breaks = seq(0, 2, 0.5)) +
xlab('average response (joke - lit)') +
ylab('average activation (joke - lit)') +
theme_bw() +
ggsave(filename="behav_activation.jpg", width=3, height=3)
